pipeline {
	agent any
	stages {
		stage('Lint html') {
			steps {
					sh '''
					    tidy deploy-bg/*.html
					'''
			}
		}
		stage('Build Docker Image') {
			steps {
				withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'Dockerhub', usernameVariable: 'usrdocker', passwordVariable: 'pwddocker']]){
					sh '''
						docker build -t fran6cu/udacity_capstone -f deploy-bg/Dockerfile .
					'''
				}
			}
		}
		stage('Push Docker Image to Dockerhub') {
			steps {
				withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'Dockerhub', usernameVariable: 'usrdocker', passwordVariable: 'pwddocker']]){
					sh '''
						docker login -u $usrdocker -p $pwddocker
						docker push fran6cu/udacity_capstone
					'''
				}
			}
		}

		stage('Set kubectl config') {
			steps {
				withAWS(region:'us-east-2', credentials:'Jenkins') {
					sh '''
						export KUBECONFIG=/home/jenkins/.kube/config
						kubectl config use-context arn:aws:eks:us-east-2:088642813079:cluster/udacity-cluster-eks
					'''
				}
			}
		}
		stage('Blue Deploy') {
			steps {
				withAWS(region:'us-east-2', credentials:'Jenkins') {
					sh '''
						kubectl apply -f deploy-bg/blue.controller.json
					'''
				}
			}
		}
		stage('Green Deploy') {
			steps {
				withAWS(region:'us-east-2', credentials:'Jenkins') {
					sh '''
						kubectl apply -f deploy-bg/green.controller.json
					'''
				}
			}
		}
		stage('Redirect to Blue') {
			steps {
				withAWS(region:'us-east-2', credentials:'Jenkins') {
					sh '''
						kubectl apply -f deploy-bg/blue.service.json
					'''
				}
			}
		}
		stage('Wait user approve') {
            steps {
                input "Redirect the traffic to the green service?"
            }
        }
		stage('Redirect to green') {
			steps {
				withAWS(region:'us-east-2', credentials:'Jenkins') {
					sh '''
						kubectl apply -f deploy-bg/green.service.json
					'''
				}
			}
		}
	}
}
